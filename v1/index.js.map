{"version":3,"sources":["intro.js","expr.js","html.js","main.js"],"names":["$","makeSymbol","s","type","val","makeNumber","v","parseInt","maxSafeInt","makeSum","ss","acc","hasNan","hasInf","subs","forEach","push","length","makeProduct","handleNumber","unshift","makeFraction","num","den","gcd","a","b","leadFactor","numden","replaceLeadFactor","lead","slice","np","dp","n","d","g","makeDefinition","lhs","rhs","parseExpression","str","expr","stripParentheses","charAt","match","split","map","root","substituteIntoExpression","rec","convertExpressionToHtml","inner","e","toFixed","value","precision","power","Math","pow","String","round","isAtom","vis","join","numdenHtml","makeEmptyFormulaHtml","formula","each","wikipedia","block","url","replace","haveToSwap","dir","i","rcOrd","rcDir","expandTable","addCell","callOrd","insertNormal","insertSwapped","makeCell","j","cellData","expandData","cell","html","attr","addCol","tbodyNode","children","oldRow","this","newCell","append","eq","before","addRow","newRow","oldCell","isExpanded","tableNode","find","text","off","click","contractTable","updateFormulas","removeCol","remove","removeRow","after","swapChildren","node","c1","c2","drawSwapIcon","angle","term","termInputs","termValues","TPR","TP","FN","FNR","FPR","FP","TN","TNR","c2p","prev","on","addClass","removeClass","td","fi","validity","valid"],"mappings":"AAAAA,EAAA,WCAA,QAAAC,GAAAC,GACA,OAAAC,KAAA,MAAAC,IAAAF,GAQA,QAAAG,GAAAH,GACA,GAAAI,GAAAC,SAAAL,GACAM,EAAA,gBACA,OAAAA,IAAAF,GACAH,KAAA,MAAAC,IAAAE,IAEAH,KAAA,QAAAC,IAAAE,GAKA,QAAAG,GAAAC,GACA,GAAAC,GAAAN,EAAA,GACAO,GAAA,EACAC,GAAA,EACAC,IAgBA,OAdAJ,GAAAK,QAAA,SAAAb,GACA,OAAAA,EAAAC,KACAQ,EAAAP,KAAAF,EAAAE,IACA,SAAAF,EAAAC,MACAQ,EAAAP,KAAAF,EAAAE,IACAO,EAAAR,KAAA,SACA,OAAAD,EAAAC,KACAS,GAAA,EACA,OAAAV,EAAAC,KACAU,GAAA,EAEAC,EAAAE,KAAAd,KAGAU,GACAT,KAAA,OACAU,GACAV,KAAA,QAEAQ,EAAAP,KACAU,EAAAE,KAAAL,GAEAG,EAAAG,OAAA,GACAd,KAAA,MAAAW,KAAAA,GACA,GAAAA,EAAAG,OACAH,EAAA,GAEAT,EAAA,IAKA,QAAAa,GAAAR,GAKA,QAAAS,GAAAjB,GACA,MAAA,OAAAA,EAAAC,MACAQ,EAAAP,KAAAF,EAAAE,IACA,GAAAF,EAAAE,MAAAO,EAAAR,KAAA,QACA,GACA,SAAAD,EAAAC,OACA,OAAAQ,EAAAR,MAAA,GAAAQ,EAAAP,OACAO,EAAAP,KAAAF,EAAAE,IACAO,EAAAR,KAAA,UAEA,IAEA,EAhBA,GAAAQ,GAAAN,EAAA,GACAO,GAAA,EACAC,GAAA,EACAC,IAmCA,OAnBAJ,GAAAK,QAAA,SAAAb,GACAiB,EAAAjB,KAEA,QAAAA,EAAAC,KACAD,EAAAY,KAAAC,QAAA,SAAAb,GACAiB,EAAAjB,IAGAY,EAAAE,KAAAd,KAGA,OAAAA,EAAAC,KACAS,GAAA,EACA,OAAAV,EAAAC,KACAU,GAAA,EAEAC,EAAAE,KAAAd,MAGAU,GAAA,GAAAD,EAAAP,KAAAS,GACAV,KAAA,QAEA,GAAAQ,EAAAP,KAAAS,GACAC,EAAAM,QAAAT,GAEAE,GACAC,EAAAM,SAAAjB,KAAA,QAEAW,EAAAG,OAAA,GACAd,KAAA,OAAAW,KAAAA,GACA,GAAAA,EAAAG,OACAH,EAAA,GAEAT,EAAA,IAIA,QAAAgB,GAAAC,EAAAC,GACA,QAAAC,GAAAC,EAAAC,GACA,MAAAA,GAGAF,EAAAE,EAAAD,EAAAC,GAFAD,EAuBA,QAAAE,GAAAC,GACA,MAAA,QAAAA,EAAAzB,KAAAyB,EAAAd,KAAA,GAAAc,EAEA,QAAAC,GAAAD,EAAAE,GACA,MAAA,QAAAF,EAAAzB,KACAe,GAAAY,EAAAZ,EAAAU,EAAAd,KAAAiB,MAAA,MAEAD,EAmCA,MA5DA,YACA,GAAAE,GAAAd,MACAe,EAAAf,KACA,SAAAI,EAAAnB,MACA6B,EAAAd,GAAAc,EAAAV,EAAAA,MACAW,EAAAf,GAAAe,EAAAX,EAAAC,OAEAS,EAAAd,GAAAc,EAAAV,IAEA,QAAAC,EAAApB,MACA6B,EAAAd,GAAAc,EAAAT,EAAAA,MACAU,EAAAf,GAAAe,EAAAV,EAAAD,OAEAW,EAAAf,GAAAe,EAAAV,IAEAD,EAAAU,EACAT,EAAAU,KAYA,WACA,GAAAC,GAAAP,EAAAL,GACAa,EAAAR,EAAAJ,EACA,IAAA,OAAAW,EAAA/B,MAAA,OAAAgC,EAAAhC,MAAA,GAAA+B,EAAA9B,KAAA,GAAA+B,EAAA/B,IAAA,CACA,GAAAgC,GAAAZ,EAAAU,EAAA9B,IAAA+B,EAAA/B,IACAkB,GAAAO,EAAAP,EAAAjB,EAAA6B,EAAA9B,IAAAgC,IACAb,EAAAM,EAAAN,EAAAlB,EAAA8B,EAAA/B,IAAAgC,QAGA,WACA,GAAAF,GAAAP,EAAAL,GACAa,EAAAR,EAAAJ,EACA,QAAAW,EAAA/B,MAAA,GAAA+B,EAAA9B,IACA,OAAA+B,EAAAhC,MAAA,GAAAgC,EAAA/B,MACAmB,EAAAM,EAAAN,EAAAlB,EAAA,KAEA,OAAA6B,EAAA/B,MACA,OAAAgC,EAAAhC,OACAoB,EAAAM,EAAAN,EAAAlB,EAAA,QAIA,WACA,GAAA8B,GAAAR,EAAAJ,EACA,QAAAY,EAAAhC,MAAA,GAAAgC,EAAA/B,KACAkB,EAAAJ,IAAAf,KAAA,OAAAmB,IACAC,EAAAM,EAAAN,EAAAlB,EAAA,KACA,OAAA8B,EAAAhC,OACAmB,EAAAJ,GAAAb,EAAA,GAAAiB,IACAC,EAAAM,EAAAN,EAAAlB,EAAA,QAGA,OAAAiB,EAAAnB,MAAA,OAAAoB,EAAApB,MACAA,KAAA,OAEA,OAAAoB,EAAApB,MAAA,GAAAoB,EAAAnB,IACAkB,GAEAnB,KAAA,OAAAmB,IAAAA,EAAAC,IAAAA,GAGA,QAAAc,GAAAC,EAAAC,GACA,OAAApC,KAAA,MAAAmC,IAAAA,EAAAC,IAAAA,GAGA,QAAAC,GAAAC,GACA,QAAAC,GAAAD,GACA,QAAAE,GAAAF,GACA,MAAA,KAAAA,EAAAG,OAAA,GACAH,EAAAV,MAAA,EAAA,IAEAU,EAGA,GAAAI,GAAAJ,EAAAI,MAAA,6BACA,OAAAA,GACAxB,EACAqB,EAAAC,EAAAE,EAAA,KACAH,EAAAC,EAAAE,EAAA,MAGApC,EACAgC,EAAAK,MAAA,KAAAC,IAAA,SAAA7C,GACA,MAAAD,GAAAC,MAKA,QAAA8C,GAAAP,GACA,GAAAI,GAAAJ,EAAAI,MAAA,cACA,OAAAA,GACAR,EACApC,EAAA4C,EAAA,IACAH,EAAAG,EAAA,KAGAH,EAAAD,GAGA,MAAAO,GAAAP,GAGA,QAAAQ,GAAAP,EAAA5B,GACA,QAAAoC,GAAAR,GACA,MAAAO,GAAAP,EAAA5B,GAEA,MAAA,OAAA4B,EAAAvC,KACAuC,EAAAtC,MAAAU,GACAA,EAAA4B,EAAAtC,KAEAsC,EAEA,OAAAA,EAAAvC,KACAM,EAAAiC,EAAA5B,KAAAiC,IAAAG,IACA,QAAAR,EAAAvC,KACAe,EAAAwB,EAAA5B,KAAAiC,IAAAG,IACA,QAAAR,EAAAvC,KACAkB,EAAA6B,EAAAR,EAAApB,KAAA4B,EAAAR,EAAAnB,MACA,OAAAmB,EAAAvC,KACAkC,EAAAK,EAAAJ,IAAAY,EAAAR,EAAAH,MAEAG,EC5PA,QAAAS,GAAAT,EAAAU,GACA,QAAAF,GAAAG,GACA,MAAAF,GAAAE,GAAA,GAEA,QAAAC,GAAAC,GACA,GAAAC,GAAA,EACAC,EAAAC,KAAAC,IAAA,GAAAH,GAAA,EACA,OAAAI,QAAAF,KAAAG,MAAAN,EAAAE,GAAAA,GAEA,QAAAK,GAAAT,GACA,MAAA,OAAAA,EAAAlD,MAAA,SAAAkD,EAAAlD,MAAA,OAAAkD,EAAAlD,KAEA,GAAA,OAAAuC,EAAAvC,KACA,MAAAyD,QAAAlB,EAAAtC,IACA,IAAA,SAAAsC,EAAAvC,KACA,MAAAmD,GAAAZ,EAAAtC,IACA,IAAA,OAAAsC,EAAAvC,KACA,MAAA,GACA,IAAA,OAAAuC,EAAAvC,KACA,MAAA,WACA,IAAA,OAAAuC,EAAAvC,KAAA,CACA,GAAA4D,GAAArB,EAAAtC,GAMA,OALA,OAAAsC,EAAAtC,IACA2D,EAAA,iBACA,OAAArB,EAAAtC,MACA2D,EAAA,kBAEA,iCAAArB,EAAAtC,IAAA,KAAA2D,EAAA,UACA,GAAA,OAAArB,EAAAvC,KACA,MAAAuC,GAAA5B,KAAAiC,IAAAG,GAAAc,KAAA,IACA,IAAA,QAAAtB,EAAAvC,KACA,MAAAuC,GAAA5B,KAAAiC,IAAA,SAAAM,GACA,MAAAS,GAAAT,GACAH,EAAAG,GAEA,IAAAH,EAAAG,GAAA,MAEAW,KAAA,IACA,IAAA,QAAAtB,EAAAvC,KAAA,CACA,GAAA8D,GAAA,SAAAZ,GACA,MAAAS,GAAAT,GACAH,EAAAG,GAEA,6BAAAH,EAAAG,GAAA,8BAGAnD,EAAA,yCACA+D,EAAAvB,EAAApB,KAAA,sDAEA2C,EAAAvB,EAAAnB,KAAA,gBAKA,OAHA6B,IAAA,OAAAV,EAAApB,IAAAnB,MAAA,OAAAuC,EAAAnB,IAAApB,OACAD,GAAA,MAAAoD,EAAAZ,EAAApB,IAAAlB,IAAAsC,EAAAnB,IAAAnB,MAEAF,EACA,MAAA,OAAAwC,EAAAvC,KACA+C,EAAAR,EAAAJ,MAAA,OAAAI,EAAAH,IAAApC,KAAA,OAAA,OAAAgD,EAAAT,EAAAH,IAAAa,GADA,OASA,QAAAc,GAAAC,GACA,MAAA,sCAAAA,EAAA,OCjEAnE,EAAA,8BAAAoE,KAAA,WAQA,QAAAC,GAAAC,GAEA,MADAC,KAAA,iCAAAD,EAAAE,QAAA,KAAA,KACA,YAAAD,IAAA,KAAAD,EAAA,OAiBA,QAAAG,GAAAC,EAAAC,GACA,MAAA,IAAAA,GAAA,GAAAA,EACA,GAAAA,EAAA,EAAAC,EAAA,GAAAA,EAAA,IAEA,EAAAA,EAAAC,EAAAH,GAGA,QAAAI,KACA,QAAAC,GAAAC,EAAAN,EAAAC,EAAAM,EAAAC,GACA,QAAAC,KACA,GAAAC,GAAAT,CACA,IAAAS,GAAA,GAAAA,IAAAR,EAAAC,EAAAH,EAAA,GAEAM,IAAA,GAAAI,GAAA,GAAAA,IAAAR,EAAAC,EAAAH,EAAA,KACAU,GAAA,GAFAA,GAAA,CAIA,IAAAC,GAAAC,EAAAT,EAAAH,GAAAU,GACAG,EAAAvF,EAAA,QAAAwF,KAAAH,EAAA,GAEA,OADA,QAAAA,EAAA,IAAAE,EAAAE,KAAA,YAAAJ,EAAA,IACAE,EAEA,GAAAA,GAAAJ,GACAV,GAAAC,EAAAC,GACAO,EAAAK,GAEAN,EAAAM,GAGA,QAAAG,GAAAV,GACAW,EAAAC,WAAAxB,KAAA,SAAAO,GACA,GAAAkB,GAAA7F,EAAA8F,KACAf,GAAAC,EAAA,EAAAL,EAAA,SAAAoB,GACAF,EAAAG,OAAAD,IACA,SAAAA,GACAF,EAAAD,WAAAK,GAAA,IAAAC,OAAAH,OAIA,QAAAI,GAAAnB,GACA,GAAAoB,GAAApG,EAAA,OACA2F,GAAAK,OAAAI,GACAT,EAAAC,WAAAK,GAAA,IAAAL,WAAAxB,KAAA,SAAAO,GACA,GAAA0B,GAAArG,EAAA8F,KACAf,GAAAC,EAAA,EAAAL,EAAA,SAAAoB,GACAK,EAAAJ,OAAAD,IACA,SAAAA,GACAM,EAAAH,OAAAH,GACAK,EAAAJ,OAAAK,OAIAxB,GACAa,EAAA,GACAS,EAAA,KAEAA,EAAA,GACAT,EAAA,IAEAY,GAAA,EACAC,EAAAC,KAAA,8BAAAC,KAAA,KAAAhB,KAAA,QAAA,kBAAAiB,MAAAC,MAAAC,GACAC,IAEA,QAAAD,KACA,QAAAE,KACAnB,EAAAC,WAAAxB,KAAA,SAAAO,GACA,GAAAkB,GAAA7F,EAAA8F,KACAD,GAAAD,WAAAK,GAAAxB,EAAA,EAAAE,GAAA,GAAA,IAAAoC,WAGA,QAAAC,KACA,GAAAnB,GAAAF,EAAAC,WAAAK,GAAA,IACAG,EAAAT,EAAAC,WAAAK,GAAA,GACAG,GAAAR,WAAAxB,KAAA,SAAAO,GACA,GAAAF,EAAA,EAAAE,GAAA,CACA,GAAA0B,GAAArG,EAAA8F,MACAC,EAAAF,EAAAD,WAAAK,GAAAtB,EACAoB,GAAAkB,MAAAZ,GAAAU,YAGAX,EAAAW,SAEAlC,GACAmC,IACAF,MAEAA,IACAE,KAEAV,GAAA,EACAC,EAAAC,KAAA,8BAAAC,KAAA,KAAAhB,KAAA,QAAA,gBAAAiB,MAAAC,MAAA7B,GAEA,QAAAoC,GAAAC,EAAAxC,GACA,GAAAyC,GAAAD,EAAAvB,WAAAK,GAAAtB,GACA0C,EAAAF,EAAAvB,WAAAK,GAAAtB,EAAA,EACAyC,GAAAlB,OAAAmB,GAEA,QAAAC,GAAAC,GACA,MAAA,4EACAA,EAAA,2RA+DA,QAAAV,KAEA,GAAA/F,KACA,KAAA0G,OAAAC,GACAA,EAAAD,QACA1G,EAAA0G,MAAAnH,EAAAqH,EAAAF,OAIA,OAAA1G,IAAA,MAAAA,KACAA,EAAA6G,IAAAtG,EAAAhB,EAAAqH,EAAAE,IAAAvH,EAAAqH,EAAAE,GAAAF,EAAAG,KACA/G,EAAAgH,IAAAzG,EAAAhB,EAAAqH,EAAAG,IAAAxH,EAAAqH,EAAAE,GAAAF,EAAAG,MAEA,MAAA/G,IAAA,MAAAA,KACAA,EAAAiH,IAAA1G,EAAAhB,EAAAqH,EAAAM,IAAA3H,EAAAqH,EAAAM,GAAAN,EAAAO,KACAnH,EAAAoH,IAAA7G,EAAAhB,EAAAqH,EAAAO,IAAA5H,EAAAqH,EAAAM,GAAAN,EAAAO,MAGA1B,EAAAC,KAAA,YAAApC,KAAA,WACA,GAAAD,GAAAnE,EAAA8F,KACA3B,GAAAqB,KAAArC,EAAAF,EAAAT,EAAA2B,EAAAsB,KAAA,iBAAA3E,OA/MA,GAAAyF,GAAAvG,EAAA8F,MACAH,EAAAY,EAAAX,SAAA,SACAf,EAAA,EACAD,GAAA,EAAA,GACA0B,GAAA,EAOAhB,KAEA,KAAApB,EAAA,2BACA,MAAA,sBAAAG,EAAA,uBAAA,SAAAH,EAAA,oBACA,MAAA,sBAAAG,EAAA,uBAAA,SAAAH,EAAA,oBACA,KAAA,8CAAAA,EAAA,2BACA,KAAA,OAEA,KAAAA,EAAA,2BACA,MAAA,sBAAAG,EAAA,wBAAA,SAAAH,EAAA,oBACA,MAAA,sBAAAG,EAAA,uBAAA,SAAAH,EAAA,oBACA,MAAA,sBAAAG,EAAA,6BAAA,SAAAH,EAAA,iBACA,MAAA,sBAAAG,EAAA,6BAAA,SAAAH,EAAA,iBA4GAqC,GAAAX,SAAA,WAAAI,OACAhG,EAAA,uEAAAsH,EAAA,KAAA,aAAAX,MAAA,WACA9B,GAAA,CAEA,KAAA,GADA3C,GAAAyD,EAAAC,WAAA3E,OACA0D,EAAA,EAAAzC,EAAAyC,EAAAA,IACA,IAAA,GAAAS,GAAA,EAAAT,EAAAS,EAAAA,IAAA,CACA,GAAAgC,GAAAzB,EAAAC,WAAAK,GAAAtB,GAAAiB,WAAAK,GAAAb,GACAiC,EAAA1B,EAAAC,WAAAK,GAAAb,GAAAQ,WAAAK,GAAAtB,GACAwD,EAAAd,EAAAe,MACAhB,GAAAH,MAAAI,GACAc,EAAAlB,MAAAG,OAIApB,OACAhG,EAAA,6DAAAsH,EAAA,GAAA,aAAAX,MAAA,WACA/B,EAAA,EAAAC,IAAA,EACAc,EAAAC,WAAAxB,KAAA,WACA8C,EAAAlH,EAAA8F,MAAA,GACAQ,GACAY,EAAAlH,EAAA8F,MAAA,QAGAE,OACAhG,EAAA,uEAAA2G,MAAA7B,IACAkB,OACAhG,EAAA,0DAAAsH,EAAA,KAAA,aAAAX,MAAA,WACA/B,EAAAC,IAAA,EACAqC,EAAAvB,EAAA,GACAW,GACAY,EAAAvB,EAAA,MAEAK,OACAhG,EAAA,uEAAA2G,MAAA7B,IAEAyB,EAAA8B,GAAA,aAAA,QAAA,WACArI,EAAA8F,MAAAwC,SAAA,aACA/B,EAAAC,KAAA,iBAAAxG,EAAA8F,MAAAL,KAAA,aAAA,MAAA6C,SAAA,eACAD,GAAA,aAAA,QAAA,WACA9B,EAAAC,KAAA,iBAAAxG,EAAA8F,MAAAL,KAAA,aAAA,MAAA8C,YAAA,aACAvI,EAAA8F,MAAAyC,YAAA,cAIA,IAAAd,IACAG,IAAA,EACAI,IAAA,EACAH,IAAA,EACAI,IAAA,GAEAP,GACAE,GAAA,EACAI,GAAA,EACAH,GAAA,EACAI,GAAA,EAyBAjI,GAAAoE,KAAAqD,EAAA,SAAAD,GACA,GAAAgB,GAAAjC,EAAAC,KAAA,iBAAAgB,EAAA,KACAgB,GAAAxC,OACAhG,EAAA,2BAAAgG,OACAhG,EAAA,8CAAA2G,MAAA,WACA,GAAAc,EAAAD,GAoBAC,EAAAD,IAAA,EACAgB,EAAA5C,SAAA,UAAAH,KAAA,QAAA,WAAAD,KAAArC,EAAAlD,EAAAuH,KACAxH,EAAA8F,MAAA1F,IAAA,kBAtBA,CACAqH,EAAAD,IAAA,CACA,IAAAiB,GAAAD,EAAA5C,SAAA,WACA6C,GAAAhD,KAAA,QAAA,SAAAD,KACA,4BACAgD,EAAA5C,SAAA,UAAAK,GAAA,GAAAQ,OAAA,+CACAiB,EAAAF,GAAA,0EAEAE,EAAAF,GAAA,aAEAiB,EAAAjC,KAAA,SAAA6B,GAAA,QAAA,WACAvC,KAAA4C,SAAAC,QAEAjB,EAAAF,GAAAjH,SAAAuF,KAAAvC,OACAkF,EAAAjC,KAAA,UAAAC,KAAAiB,EAAAF,IACAX,OAGA7G,EAAA8F,MAAA1F,IAAA,iBAMAyG","file":"index.js","sourcesContent":["$(function(){\r\n","function makeSymbol(s) {\r\n\treturn {type:'sym',val:s};\r\n\t// technically need two types of symbols:\r\n\t//   finite x: 0*x can be transformed into 0\r\n\t//   possibly infinite x: 0*x has to be kept\r\n\t// currently playing safe and considering all symbols possibly infinite\r\n\t// also all symbols are considered nonnegative, otherwise will need two more types\r\n}\r\n\r\nfunction makeNumber(s) {\r\n\tvar v=parseInt(s);\r\n\tvar maxSafeInt=9007199254740991; // Number.MAX_SAFE_INTEGER, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\r\n\tif (v<=maxSafeInt) {\r\n\t\treturn {type:'int',val:v};\r\n\t} else {\r\n\t\treturn {type:'float',val:v};\r\n\t}\r\n}\r\n\r\n// TODO sum with inf and nan\r\nfunction makeSum(ss) {\r\n\tvar acc=makeNumber(0);\r\n\tvar hasNan=false;\r\n\tvar hasInf=false;\r\n\tvar subs=[];\r\n\t// TODO flatten sum? - don't need it here\r\n\tss.forEach(function(s){\r\n\t\tif (s.type=='int') {\r\n\t\t\tacc.val+=s.val; // TODO check if safe int\r\n\t\t} else if (s.type=='float') {\r\n\t\t\tacc.val+=s.val;\r\n\t\t\tacc.type='float';\r\n\t\t} else if (s.type=='nan') {\r\n\t\t\thasNan=true;\r\n\t\t} else if (s.type=='inf') {\r\n\t\t\thasInf=true;\r\n\t\t} else {\r\n\t\t\tsubs.push(s);\r\n\t\t}\r\n\t});\r\n\tif (hasNan) {\r\n\t\treturn {type:'nan'};\r\n\t} else if (hasInf) {\r\n\t\treturn {type:'inf'};\r\n\t}\r\n\tif (acc.val) {\r\n\t\tsubs.push(acc);\r\n\t}\r\n\tif (subs.length>1) {\r\n\t\treturn {type:'sum',subs:subs};\r\n\t} else if (subs.length==1) {\r\n\t\treturn subs[0];\r\n\t} else {\r\n\t\treturn makeNumber(0);\r\n\t}\r\n}\r\n\r\n// TODO prod with inf and nan\r\nfunction makeProduct(ss) {\r\n\tvar acc=makeNumber(1);\r\n\tvar hasNan=false;\r\n\tvar hasInf=false;\r\n\tvar subs=[];\r\n\tfunction handleNumber(s) {\r\n\t\tif (s.type=='int') {\r\n\t\t\tacc.val*=s.val; // TODO check if safe int\r\n\t\t\tif (s.val==0) acc.type='int';\r\n\t\t\treturn true;\r\n\t\t} else if (s.type=='float') {\r\n\t\t\tif (!(acc.type=='int' && acc.val==0)) {\r\n\t\t\t\tacc.val*=s.val;\r\n\t\t\t\tacc.type='float';\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tss.forEach(function(s){\r\n\t\tif (handleNumber(s)) {\r\n\t\t\t// done by handleNumber(s)\r\n\t\t} else if (s.type=='prod') {\r\n\t\t\ts.subs.forEach(function(s){\r\n\t\t\t\tif (handleNumber(s)) {\r\n\t\t\t\t\t// done by handleNumber(s)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsubs.push(s);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (s.type=='nan') {\r\n\t\t\thasNan=true;\r\n\t\t} else if (s.type=='inf') {\r\n\t\t\thasInf=true;\r\n\t\t} else {\r\n\t\t\tsubs.push(s);\r\n\t\t}\r\n\t});\r\n\tif (hasNan || (acc.val==0 && hasInf)) {\r\n\t\treturn {type:'nan'};\r\n\t}\r\n\tif (acc.val!=1 && !hasInf) {\r\n\t\tsubs.unshift(acc);\r\n\t}\r\n\tif (hasInf) {\r\n\t\tsubs.unshift({type:'inf'});\r\n\t}\r\n\tif (subs.length>1) {\r\n\t\treturn {type:'prod',subs:subs}; // number can only be a first subexpression\r\n\t} else if (subs.length==1) {\r\n\t\treturn subs[0];\r\n\t} else {\r\n\t\treturn makeNumber(1);\r\n\t}\r\n}\r\n\r\nfunction makeFraction(num,den) {\r\n\tfunction gcd(a,b) {\r\n\t\tif (!b) {\r\n\t\t\treturn a;\r\n\t\t} else {\r\n\t\t\treturn gcd(b,a%b);\r\n\t\t}\r\n\t};\r\n\t(function(){\r\n\t\tvar np=makeProduct([]);\r\n\t\tvar dp=makeProduct([]);\r\n\t\tif (num.type=='frac') {\r\n\t\t\tnp=makeProduct([np,num.num]);\r\n\t\t\tdp=makeProduct([dp,num.den]);\r\n\t\t} else {\r\n\t\t\tnp=makeProduct([np,num]);\r\n\t\t}\r\n\t\tif (den.type=='frac') {\r\n\t\t\tnp=makeProduct([np,den.den]);\r\n\t\t\tdp=makeProduct([dp,den.num]);\r\n\t\t} else {\r\n\t\t\tdp=makeProduct([dp,den]);\r\n\t\t}\r\n\t\tnum=np;\r\n\t\tden=dp;\r\n\t})();\r\n\tfunction leadFactor(numden) {\r\n\t\treturn numden.type=='prod'?numden.subs[0]:numden;\r\n\t}\r\n\tfunction replaceLeadFactor(numden,lead) {\r\n\t\tif (numden.type=='prod') {\r\n\t\t\treturn makeProduct([lead,makeProduct(numden.subs.slice(1))]);\r\n\t\t} else {\r\n\t\t\treturn lead;\r\n\t\t}\r\n\t}\r\n\t(function(){\r\n\t\tvar n=leadFactor(num);\r\n\t\tvar d=leadFactor(den);\r\n\t\tif (n.type=='int' && d.type=='int' && n.val!=0 && d.val!=0) {\r\n\t\t\tvar g=gcd(n.val,d.val);\r\n\t\t\tnum=replaceLeadFactor(num,makeNumber(n.val/g));\r\n\t\t\tden=replaceLeadFactor(den,makeNumber(d.val/g));\r\n\t\t}\r\n\t})();\r\n\t(function(){\r\n\t\tvar n=leadFactor(num);\r\n\t\tvar d=leadFactor(den);\r\n\t\tif (n.type=='int' && n.val==0) {\r\n\t\t\tif (d.type=='int' && d.val!=0) {\r\n\t\t\t\tden=replaceLeadFactor(den,makeNumber(1));\r\n\t\t\t}\r\n\t\t} else if (n.type=='inf') {\r\n\t\t\tif (d.type=='int') {\r\n\t\t\t\tden=replaceLeadFactor(den,makeNumber(1));\r\n\t\t\t}\r\n\t\t}\r\n\t})();\r\n\t(function(){\r\n\t\tvar d=leadFactor(den);\r\n\t\tif (d.type=='int' && d.val==0) {\r\n\t\t\tnum=makeProduct([{type:'inf'},num]);\r\n\t\t\tden=replaceLeadFactor(den,makeNumber(1));\r\n\t\t} else if (d.type=='inf') {\r\n\t\t\tnum=makeProduct([makeNumber(0),num]);\r\n\t\t\tden=replaceLeadFactor(den,makeNumber(1));\r\n\t\t}\r\n\t})();\r\n\tif (num.type=='nan' || den.type=='nan') {\r\n\t\treturn {type:'nan'};\r\n\t}\r\n\tif (den.type=='int' && den.val==1) {\r\n\t\treturn num;\r\n\t}\r\n\treturn {type:'frac',num:num,den:den};\r\n}\r\n\r\nfunction makeDefinition(lhs,rhs) {\r\n\treturn {type:'def',lhs:lhs,rhs:rhs};\r\n}\r\n\r\nfunction parseExpression(str) {\r\n\tfunction expr(str) {\r\n\t\tfunction stripParentheses(str) {\r\n\t\t\tif (str.charAt(0)=='(') {\r\n\t\t\t\treturn str.slice(1,-1);\r\n\t\t\t} else {\r\n\t\t\t\treturn str;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar match=str.match(/(\\(.*\\)|\\w+)\\/(\\(.*\\)|\\w+)/);\r\n\t\tif (match) {\r\n\t\t\treturn makeFraction(\r\n\t\t\t\texpr(stripParentheses(match[1])),\r\n\t\t\t\texpr(stripParentheses(match[2]))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn makeSum(\r\n\t\t\t\tstr.split('+').map(function(s){\r\n\t\t\t\t\treturn makeSymbol(s);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tfunction root(str) {\r\n\t\tvar match=str.match(/^(.*)=(.*)$/);\r\n\t\tif (match) {\r\n\t\t\treturn makeDefinition(\r\n\t\t\t\tmakeSymbol(match[1]),\r\n\t\t\t\texpr(match[2])\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn expr(str);\r\n\t\t}\r\n\t}\r\n\treturn root(str);\r\n}\r\n\r\nfunction substituteIntoExpression(expr,subs) { // FIXME both subexpressions and substitutions are called 'subs'\r\n\tfunction rec(expr) {\r\n\t\treturn substituteIntoExpression(expr,subs);\r\n\t}\r\n\tif (expr.type=='sym') {\r\n\t\tif (expr.val in subs) {\r\n\t\t\treturn subs[expr.val];\r\n\t\t} else {\r\n\t\t\treturn expr;\r\n\t\t}\r\n\t} else if (expr.type=='sum') {\r\n\t\treturn makeSum(expr.subs.map(rec));\r\n\t} else if (expr.type=='prod') {\r\n\t\treturn makeProduct(expr.subs.map(rec));\r\n\t} else if (expr.type=='frac') {\r\n\t\treturn makeFraction(rec(expr.num),rec(expr.den));\r\n\t} else if (expr.type=='def') {\r\n\t\treturn makeDefinition(expr.lhs,rec(expr.rhs)); // don't substitute in lhs\r\n\t} else {\r\n\t\treturn expr;\r\n\t}\r\n}\r\n","function convertExpressionToHtml(expr,inner) {\r\n\tfunction rec(e) {\r\n\t\treturn convertExpressionToHtml(e,true);\r\n\t}\r\n\tfunction toFixed(value) { // http://stackoverflow.com/a/661757\r\n\t\tvar precision=6;\r\n\t\tvar power=Math.pow(10,precision||0);\r\n\t\treturn String(Math.round(value*power)/power);\r\n\t}\r\n\tfunction isAtom(e) {\r\n\t\treturn e.type=='int' || e.type=='float' || e.type=='sym';\r\n\t}\r\n\tif (expr.type=='int') {\r\n\t\treturn String(expr.val);\r\n\t} else if (expr.type=='float') {\r\n\t\treturn toFixed(expr.val); // TODO markup for e+nn\r\n\t} else if (expr.type=='inf') {\r\n\t\treturn '∞';\r\n\t} else if (expr.type=='nan') {\r\n\t\treturn 'undefined';\r\n\t} else if (expr.type=='sym') {\r\n\t\tvar vis=expr.val;\r\n\t\tif (expr.val=='PLR') {\r\n\t\t\tvis=\"LR<sub>+</sub>\";\r\n\t\t} else if (expr.val=='NLR') {\r\n\t\t\tvis=\"LR<sub>−</sub>\";\r\n\t\t}\r\n\t\treturn \"<span class='term' data-term='\"+expr.val+\"'>\"+vis+\"</span>\";\r\n\t} else if (expr.type=='sum') {\r\n\t\treturn expr.subs.map(rec).join('+');\r\n\t} else if (expr.type=='prod') {\r\n\t\treturn expr.subs.map(function(e){\r\n\t\t\tif (isAtom(e)) {\r\n\t\t\t\treturn rec(e);\r\n\t\t\t} else {\r\n\t\t\t\treturn '('+rec(e)+')'; // TODO span='aux' for e.type=='frac' (but not for e.type=='sum')\r\n\t\t\t}\r\n\t\t}).join('·');\r\n\t} else if (expr.type=='frac') {\r\n\t\tvar numdenHtml=function(e){\r\n\t\t\tif (isAtom(e)) {\r\n\t\t\t\treturn rec(e);\r\n\t\t\t} else {\r\n\t\t\t\treturn \"<span class='aux'>(</span>\"+rec(e)+\"<span class='aux'>)</span>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar s=\"<span class='sfrac'>\"+\r\n\t\t\t\"<span class='num'>\"+numdenHtml(expr.num)+\"</span>\"+\r\n\t\t\t\"<span class='aux'>/</span>\"+\r\n\t\t\t\"<span class='den'>\"+numdenHtml(expr.den)+\"</span>\"+\r\n\t\t\"</span>\";\r\n\t\tif (!inner && expr.num.type=='int' && expr.den.type=='int') {\r\n\t\t\ts+=' = '+toFixed(expr.num.val/expr.den.val);\r\n\t\t}\r\n\t\treturn s;\r\n\t} else if (expr.type=='def') {\r\n\t\treturn rec(expr.lhs)+(expr.rhs.type=='nan'?' is ':' = ')+convertExpressionToHtml(expr.rhs,inner);\r\n\t}\r\n}\r\n\r\nfunction makeWrappedFormulaHtml(formula) {\r\n\treturn \"<div class='formula' data-formula='\"+formula+\"'>\"+convertExpressionToHtml(parseExpression(formula))+\"</div>\";\r\n}\r\n\r\nfunction makeEmptyFormulaHtml(formula) {\r\n\treturn \"<div class='formula' data-formula='\"+formula+\"' />\";\r\n}\r\n\r\n// TODO fn to output the whole table\r\n","$('table.statistics-confusion').each(function(){\r\n\tvar tableNode=$(this);\r\n\tvar tbodyNode=tableNode.children('tbody');\r\n\tvar rcDir=0; // outcome headers on top?\r\n\tvar rcOrd=[0,0]; // outcomes swapped?, conditions swapped?\r\n\tvar isExpanded=false;\r\n\t//function wikipedia(block,url) {\r\n\t//\tif (url===undefined) url=\"https://en.wikipedia.org/wiki/\"+block.replace(/ /g,'_');\r\n\tfunction wikipedia(block) {\r\n\t\turl=\"https://en.wikipedia.org/wiki/\"+block.replace(/ /g,'_');\r\n\t\treturn \"<a href='\"+url+\"'>\"+block+\"</a>\";\r\n\t}\r\n\tvar expandData=[\r\n\t\t[ // new row\r\n\t\t\t[null,makeEmptyFormulaHtml(\"(FN+TN)/(TP+FP+FN+TN)\")],\r\n\t\t\t['FNR',\"<div class='label'>\"+wikipedia(\"False negative rate\")+\"</div>\"+makeEmptyFormulaHtml(\"FNR=FN/(TP+FN)\")],\r\n\t\t\t['FPR',\"<div class='label'>\"+wikipedia(\"False positive rate\")+\"</div>\"+makeEmptyFormulaHtml(\"FPR=FP/(FP+TN)\")],\r\n\t\t\t[null,\"<div class='label'>Overall error rate</div>\"+makeEmptyFormulaHtml(\"(FP+FN)/(TP+FP+FN+TN)\")],\r\n\t\t\t[null,\"\"] // not used\r\n\t\t],[ // new col\r\n\t\t\t[null,makeEmptyFormulaHtml(\"(FP+TN)/(TP+FP+FN+TN)\")],\r\n\t\t\t['FDR',\"<div class='label'>\"+wikipedia(\"False discovery rate\")+\"</div>\"+makeEmptyFormulaHtml(\"FDR=FP/(TP+FP)\")],\r\n\t\t\t['FOR',\"<div class='label'>\"+wikipedia(\"False omission rate\")+\"</div>\"+makeEmptyFormulaHtml(\"FOR=FN/(FN+TN)\")],\r\n\t\t\t['PLR',\"<div class='label'>\"+wikipedia(\"Positive likelihood ratio\")+\"</div>\"+makeEmptyFormulaHtml(\"PLR=TPR/FPR\")],\r\n\t\t\t['NLR',\"<div class='label'>\"+wikipedia(\"Negative likelihood ratio\")+\"</div>\"+makeEmptyFormulaHtml(\"NLR=FNR/TNR\")]\r\n\t\t]\r\n\t];\r\n\tfunction haveToSwap(dir,i) {\r\n\t\tif (i==1 || i==2) {\r\n\t\t\treturn ((i-1)^rcOrd[0]^rcOrd[1])&1;\r\n\t\t} else {\r\n\t\t\treturn rcOrd[rcDir^dir]&1;\r\n\t\t}\r\n\t}\r\n\tfunction expandTable() {\r\n\t\tfunction addCell(callOrd,dir,i,insertNormal,insertSwapped) {\r\n\t\t\tfunction makeCell() {\r\n\t\t\t\tvar j=i;\r\n\t\t\t\tif ((j==1 || j==2) && rcOrd[rcDir^dir^1]) {\r\n\t\t\t\t\tj^=1^2;\r\n\t\t\t\t} else if (callOrd && (j==3 || j==4) && rcOrd[rcDir^dir^1]) {\r\n\t\t\t\t\tj^=3^4;\r\n\t\t\t\t}\r\n\t\t\t\tvar cellData=expandData[rcDir^dir][j];\r\n\t\t\t\tvar cell=$(\"<td>\").html(cellData[1]);\r\n\t\t\t\tif (cellData[0]!==null) cell.attr('data-term',cellData[0]);\r\n\t\t\t\treturn cell;\r\n\t\t\t}\r\n\t\t\tvar cell=makeCell();\r\n\t\t\tif (haveToSwap(dir,i)) {\r\n\t\t\t\tinsertSwapped(cell);\r\n\t\t\t} else {\r\n\t\t\t\tinsertNormal(cell);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction addCol(callOrd) {\r\n\t\t\ttbodyNode.children().each(function(i){\r\n\t\t\t\tvar oldRow=$(this);\r\n\t\t\t\taddCell(callOrd,1,i,function(newCell){\r\n\t\t\t\t\toldRow.append(newCell);\r\n\t\t\t\t},function(newCell){\r\n\t\t\t\t\toldRow.children().eq(-1).before(newCell);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction addRow(callOrd) {\r\n\t\t\tvar newRow=$(\"<tr>\");\r\n\t\t\ttbodyNode.append(newRow);\r\n\t\t\ttbodyNode.children().eq(-2).children().each(function(i){\r\n\t\t\t\tvar oldCell=$(this);\r\n\t\t\t\taddCell(callOrd,0,i,function(newCell){\r\n\t\t\t\t\tnewRow.append(newCell);\r\n\t\t\t\t},function(newCell){\r\n\t\t\t\t\toldCell.before(newCell);\r\n\t\t\t\t\tnewRow.append(oldCell);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (rcDir) {\r\n\t\t\taddCol(0);\r\n\t\t\taddRow(1);\r\n\t\t} else {\r\n\t\t\taddRow(0);\r\n\t\t\taddCol(1);\r\n\t\t}\r\n\t\tisExpanded=true;\r\n\t\ttableNode.find('button.add-r, button.add-c').text('−').attr('title','contract table').off().click(contractTable);\r\n\t\tupdateFormulas();\r\n\t}\r\n\tfunction contractTable() {\r\n\t\tfunction removeCol() {\r\n\t\t\ttbodyNode.children().each(function(i){\r\n\t\t\t\tvar oldRow=$(this);\r\n\t\t\t\toldRow.children().eq(haveToSwap(1,i)?-2:-1).remove();\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction removeRow() {\r\n\t\t\tvar oldRow=tbodyNode.children().eq(-2);\r\n\t\t\tvar newRow=tbodyNode.children().eq(-1);\r\n\t\t\tnewRow.children().each(function(i){\r\n\t\t\t\tif (haveToSwap(0,i)) {\r\n\t\t\t\t\tvar oldCell=$(this);\r\n\t\t\t\t\tvar newCell=oldRow.children().eq(i);\r\n\t\t\t\t\tnewCell.after(oldCell).remove();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tnewRow.remove();\r\n\t\t}\r\n\t\tif (rcDir) {\r\n\t\t\tremoveRow();\r\n\t\t\tremoveCol();\r\n\t\t} else {\r\n\t\t\tremoveCol();\r\n\t\t\tremoveRow();\r\n\t\t}\r\n\t\tisExpanded=false;\r\n\t\ttableNode.find('button.add-r, button.add-c').text('+').attr('title','expand table').off().click(expandTable);\r\n\t}\r\n\tfunction swapChildren(node,i) {\r\n\t\tvar c1=node.children().eq(i);\r\n\t\tvar c2=node.children().eq(i+1);\r\n\t\tc1.before(c2);\r\n\t}\r\n\tfunction drawSwapIcon(angle) {\r\n\t\treturn \"<svg width='100%' height='100%' viewBox='-2 -2 4 4'>\"+\r\n\t\t\t\"<g transform='rotate(\"+angle+\")'>\"+\r\n\t\t\t\"<path d='M -1 1 V 0 A 1 1 0 0 1 1 0 V 1' fill='none' stroke='#000' stroke-width='0.25' />\"+\r\n\t\t\t\"<path d='M -1.4 0.25 L -1 1 L -0.6 0.25 L -1 1.25 Z' stroke='#000' stroke-width='0.15' />\"+\r\n\t\t\t\"<path d='M  1.4 0.25 L  1 1 L  0.6 0.25 L  1 1.25 Z' stroke='#000' stroke-width='0.15' />\"+\r\n\t\t\t\"</g>\"+\r\n\t\t\"</svg>\";\r\n\t}\r\n\ttableNode.children('caption').append(\r\n\t\t$(\"<button type='button' class='swap-rc' title='swap rows and columns'>\"+drawSwapIcon(-45)+\"</button>\").click(function(){\r\n\t\t\trcDir^=1;\r\n\t\t\tvar n=tbodyNode.children().length;\r\n\t\t\tfor (var i=0;i<n;i++) {\r\n\t\t\t\tfor (var j=0;j<i;j++) {\r\n\t\t\t\t\tvar c1=tbodyNode.children().eq(i).children().eq(j);\r\n\t\t\t\t\tvar c2=tbodyNode.children().eq(j).children().eq(i);\r\n\t\t\t\t\tvar c2p=c2.prev();\r\n\t\t\t\t\tc1.after(c2);\r\n\t\t\t\t\tc2p.after(c1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t).append(\r\n\t\t$(\"<button type='button' class='swap-c' title='swap columns'>\"+drawSwapIcon(0)+\"</button>\").click(function(){\r\n\t\t\trcOrd[rcDir^1]^=1;\r\n\t\t\ttbodyNode.children().each(function(){\r\n\t\t\t\tswapChildren($(this),1);\r\n\t\t\t\tif (!isExpanded) return;\r\n\t\t\t\tswapChildren($(this),3);\r\n\t\t\t});\r\n\t\t})\r\n\t).append(\r\n\t\t$(\"<button type='button' class='add-c' title='expand table'>+</button>\").click(expandTable)\r\n\t).append(\r\n\t\t$(\"<button type='button' class='swap-r' title='swap rows'>\"+drawSwapIcon(-90)+\"</button>\").click(function(){\r\n\t\t\trcOrd[rcDir]^=1;\r\n\t\t\tswapChildren(tbodyNode,1);\r\n\t\t\tif (!isExpanded) return;\r\n\t\t\tswapChildren(tbodyNode,3);\r\n\t\t})\r\n\t).append(\r\n\t\t$(\"<button type='button' class='add-r' title='expand table'>+</button>\").click(expandTable)\r\n\t);\r\n\ttableNode.on('mouseenter','.term',function(){\r\n\t\t$(this).addClass('highlight');\r\n\t\ttableNode.find(\"td[data-term='\"+$(this).attr('data-term')+\"']\").addClass('highlight');\r\n\t}).on('mouseleave','.term',function(){\r\n\t\ttableNode.find(\"td[data-term='\"+$(this).attr('data-term')+\"']\").removeClass('highlight');\r\n\t\t$(this).removeClass('highlight');\r\n\t});\r\n\r\n\t// number inputs\r\n\tvar termInputs={\r\n\t\t'TP':false,\r\n\t\t'FP':false,\r\n\t\t'FN':false,\r\n\t\t'TN':false\r\n\t};\r\n\tvar termValues={\r\n\t\t'TP':0,\r\n\t\t'FP':0,\r\n\t\t'FN':0,\r\n\t\t'TN':0\r\n\t};\r\n\tfunction updateFormulas() {\r\n\t\t// entered numbers\r\n\t\tvar subs={};\r\n\t\tfor (term in termInputs) {\r\n\t\t\tif (termInputs[term]) {\r\n\t\t\t\tsubs[term]=makeNumber(termValues[term]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// hack for DLR\r\n\t\tif ('TP' in subs && 'FN' in subs) {\r\n\t\t\tsubs.TPR=makeFraction(makeNumber(termValues.TP),makeNumber(termValues.TP+termValues.FN));\r\n\t\t\tsubs.FNR=makeFraction(makeNumber(termValues.FN),makeNumber(termValues.TP+termValues.FN));\r\n\t\t}\r\n\t\tif ('FP' in subs && 'TN' in subs) {\r\n\t\t\tsubs.FPR=makeFraction(makeNumber(termValues.FP),makeNumber(termValues.FP+termValues.TN));\r\n\t\t\tsubs.TNR=makeFraction(makeNumber(termValues.TN),makeNumber(termValues.FP+termValues.TN));\r\n\t\t}\r\n\t\t// update html\r\n\t\ttableNode.find('.formula').each(function(){\r\n\t\t\tvar formula=$(this);\r\n\t\t\tformula.html(convertExpressionToHtml(substituteIntoExpression(parseExpression(formula.attr('data-formula')),subs)));\r\n\t\t});\r\n\t}\r\n\t$.each(termInputs,function(term){\r\n\t\tvar td=tableNode.find(\"td[data-term='\"+term+\"']\");\r\n\t\ttd.append(\r\n\t\t\t$(\"<div class='buttons' />\").append(\r\n\t\t\t\t$(\"<input type='button' value='Set number' />\").click(function(){\r\n\t\t\t\t\tif (!termInputs[term]) {\r\n\t\t\t\t\t\ttermInputs[term]=true;\r\n\t\t\t\t\t\tvar fi=td.children('.formula');\r\n\t\t\t\t\t\tfi.attr('class','input').html(\r\n\t\t\t\t\t\t\t\"<label>\"+\r\n\t\t\t\t\t\t\t\t\"<span class='aux'>\"+td.children('.label').eq(0).text()+\"</span> \"+\r\n\t\t\t\t\t\t\t\t\"<input type='number' min='0' value='\"+termValues[term]+\"' required />\"+\r\n\t\t\t\t\t\t\t\"</label>\"+\r\n\t\t\t\t\t\t\t\"<span class='aux'>, current value:</span> <output>\"+termValues[term]+\"</output>\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tfi.find('input').on('input',function(){\r\n\t\t\t\t\t\t\tif (this.validity.valid) {\r\n\t\t\t\t\t\t\t\t//termValues[term]=this.valueAsNumber; // doesn't work in IE\r\n\t\t\t\t\t\t\t\ttermValues[term]=parseInt(this.value);\r\n\t\t\t\t\t\t\t\tfi.find('output').text(termValues[term]);\r\n\t\t\t\t\t\t\t\tupdateFormulas();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$(this).val('Remove number');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttermInputs[term]=false;\r\n\t\t\t\t\t\ttd.children('.input').attr('class','formula').html(convertExpressionToHtml(makeSymbol(term)));\r\n\t\t\t\t\t\t$(this).val('Set number');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateFormulas();\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n});\r\n"],"sourceRoot":"/source/"}